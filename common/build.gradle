architectury {
    common(rootProject.enabled_platforms.split(","))
}

loom {
    accessWidenerPath = file("src/main/resources/minecraft_access.accesswidener")
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury:${rootProject.architectury_version}"

    // lombok that makes the life easier
    // https://projectlombok.org/setup/gradle
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

    // Unit test dependencies
    testImplementation "org.junit.jupiter:junit-jupiter:5.10.0"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.10.0"
    testImplementation "org.assertj:assertj-core:3.24.2"
    testImplementation "org.mockito:mockito-core:5.4.0"
    testImplementation "org.mockito:mockito-junit-jupiter:5.4.0"

    // benchmark dependencies
    testImplementation "org.openjdk.jmh:jmh-core:1.37"
    testAnnotationProcessor "org.openjdk.jmh:jmh-generator-annprocess:1.37"
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
